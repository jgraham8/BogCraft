name: BogCraft CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'BogCraft.UI'
  TEST_PROJECT: 'BogCraft.Tests'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install Playwright
      run: |
        dotnet build ${{ env.TEST_PROJECT }}
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Start Application
      run: |
        dotnet run --project ${{ env.PROJECT_NAME }} --configuration Release &
        sleep 10
        curl --retry 10 --retry-delay 2 --retry-connrefused http://localhost:5091 || echo "App not ready"
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/TestResults/**/*'

  build-and-package:
    name: Build & Package
    runs-on: windows-latest
    needs: test
    if: github.event_name != 'release' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Publish Application
      run: dotnet publish ${{ env.PROJECT_NAME }} -c Release -r win-x64 --self-contained true -o ./publish
          
    - name: Create deployment package
      run: |
        Compress-Archive -Path ./publish/* -DestinationPath bogcraft-ui-${{ github.run_number }}.zip
      shell: pwsh
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bogcraft-ui-${{ github.run_number }}
        path: |
          publish/
          bogcraft-ui-${{ github.run_number }}.zip

  release-build:
    name: Build for Release
    runs-on: windows-latest
    permissions:
      contents: write
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Publish Application
      run: dotnet publish ${{ env.PROJECT_NAME }} -c Release -r win-x64 --self-contained true -o ./publish
          
    - name: Create deployment package
      run: |
        Compress-Archive -Path ./publish/* -DestinationPath bogcraft-ui-${{ github.event.release.tag_name }}.zip
      shell: pwsh
        
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: bogcraft-ui-${{ github.event.release.tag_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}